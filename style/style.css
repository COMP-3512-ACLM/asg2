*, *:before, *:after {
    box-sizing: inherit;
}

:root {
    --container-padding: 1rem;
    --filters-width: 22rem;
}

/* Prevents inputs from overflowing */
form {
    box-sizing: border-box;
}

input {
    margin-bottom: .25rem;
}

output {
    margin: auto;
    font-size: .75em;
}

.container {
    background-color: lightblue;
    
    padding: var(--container-padding);
}

/******************************
Filter panel styling
******************************/

#filters {
    width: var(--filters-width);
    overflow: hidden; /* For hiding the contents when toggled */
    padding: 0; /* Otherwise, the panel still shows when width is 0 */
    
    transition: .5s width ease;
}

#filters.hidden {
    width: 0;
}

#filters form, #filters h1 {
    margin: var(--container-padding); /* This acts as the padding removed earlier */
}

#filters fieldset {
    margin-bottom: 1rem;
}

#filters fieldset div {
    margin-bottom: .375rem;
    
    display: grid;
    
    /*  Note: Exact, static units are used here to maintain the panel's contents when toggling.
        With relative sizes, the panel contents will shift around as the panel is toggled.
        The sum of these variables should equal the --filters-width variable minus padding. */
    --radio-size: 2rem;
    --label-size: 4rem;
    --input-size: 13rem;
    --output-size: 2rem;
    
    grid-template-columns: var(--radio-size) var(--label-size)
                            var(--input-size) var(--output-size);
}

#filters input[type=text], #filters input[type=range] {
    grid-column: 3;
    
    width: 100%;
}

/******************************
Search results styling
******************************/

/* The "sort by" bar */

#sortbar {
    display: grid;
    grid-template-columns: auto repeat(3, 5em);
}

#sortbar span {
    margin: auto;
    
    opacity: 75%; /* Slightly transparent when not selected */
}

#sortbar span:hover {
    cursor: pointer;
    
    opacity: 100%;
}

/* Only show sort direction when selected */
#sortbar span::after {
    opacity: 0;
}

#sortbar span.selected, #sortbar span.selected::after {
    opacity: 100%;
}

/* Show appropriate arrow for sort direction */
#sortbar span[data-sortdir="1"]::after {
    content: " ▴";
}

#sortbar span[data-sortdir="-1"]::after {
    content: " ▾";
}